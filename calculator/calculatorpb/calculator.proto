syntax = "proto3";

package calculator;
option go_package="calculator/calculatorpb";

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 sum_result = 1;
}

message PrimeNumberDecompositionRequest {
  int64 prime_number = 1;
}

message PrimeNumberDecompositionResponse {
  int64 prime_result = 1;
}

message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  double number = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse{
  int32 maximum = 1;
}

message SquareRootRequest{
  int32 number = 1;
}

message SquareRootResponse{
  double number_root = 1;
}

service CalculatorService {
  // unary
  rpc Sum(SumRequest) returns (SumResponse){}

  // server-streaming
  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){}

  // client-streaming
  rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){}

  // bidi-streaming
  rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){}

  // unary
  // RPC throws exception if the request sends a -ve number
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){}
}